plugins {
	id 'org.springframework.boot' version '2.4.0'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'pl.bookstore'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
}

test {
	useJUnitPlatform()
}

task generatePostsAndComments() {
	doLast {
		File dataSql = file("src/main/resources/data.sql")
		dataSql.write("")
		// books
		for (int i = 1; i <= 100; i++) {
			dataSql.append("insert into book(isbn, title, description, publication_date, edition, price, author) " +
					"values ('${i}', 'Title ${i}', 'Description ${i}', 2020, '${i}', ${i*1.01}, 'Author ${i}');\n")
		}

		// comments
		for (int i = 1; i <= 100; i++) {
			int bookIsbn = 1 + i / 10
			dataSql.append("insert into comment(id, book_isbn, content, created) " +
					"values (${i}, ${bookIsbn}, 'Comment ${i}', '" + LocalDateTime.now().minusDays(100 - i) + "');\n")
		}
	}
}